{"ast":null,"code":"var _jsxFileName = \"/home/labber/Dev/chemical-plant-dashboard/client/src/components/index.jsx\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, PointElement, LineElement } from \"chart.js\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport LineGraph from \"./Line\";\nimport { BarGraphType, GraphTypes, LineGraphTypes } from \"../services/dummy\";\nimport { BarGraph } from \"./Bar\";\nimport { GetData } from \"../services/APICall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Graph() {\n  _s();\n  const [graphType, setGraphType] = useState(\"\");\n  const [barType, setBarType] = useState(\"\");\n  const [lineType, setLineType] = useState(\"\");\n  useEffect(() => {\n    GetData().then(data => {\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"GraphType\",\n      onChange: e => {\n        setGraphType(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        selected: \"selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), GraphTypes.map(({\n        value,\n        label\n      }, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), graphType === \"Line\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"LineType\",\n        onChange: e => {\n          setLineType(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), LineGraphTypes.map(({\n          value,\n          label\n        }, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), lineType && /*#__PURE__*/_jsxDEV(LineGraph, {\n        type: lineType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true), graphType === \"Bar\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"BarType\",\n        onChange: e => {\n          setBarType(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), BarGraphType.map(({\n          value,\n          label\n        }, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), barType && /*#__PURE__*/_jsxDEV(BarGraph, {\n        type: barType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(Graph, \"SVLP8Y46wp6SGob1CknPiNrAk2E=\");\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","PointElement","LineElement","Bar","Line","React","useEffect","useRef","useState","LineGraph","BarGraphType","GraphTypes","LineGraphTypes","BarGraph","GetData","jsxDEV","_jsxDEV","Fragment","_Fragment","Graph","_s","graphType","setGraphType","barType","setBarType","lineType","setLineType","then","data","console","log","children","name","onChange","e","target","value","selected","fileName","_jsxFileName","lineNumber","columnNumber","map","label","index","type","_c","$RefreshReg$"],"sources":["/home/labber/Dev/chemical-plant-dashboard/client/src/components/index.jsx"],"sourcesContent":["import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  PointElement,\r\n  LineElement,\r\n} from \"chart.js\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport LineGraph from \"./Line\";\r\nimport { BarGraphType, GraphTypes, LineGraphTypes } from \"../services/dummy\";\r\nimport { BarGraph } from \"./Bar\";\r\nimport { GetData } from \"../services/APICall\";\r\nexport default function Graph() {\r\n  const [graphType, setGraphType] = useState(\"\");\r\n  const [barType, setBarType] = useState(\"\");\r\n  const [lineType, setLineType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    GetData().then((data) => {\r\n      console.log(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <select\r\n        name=\"GraphType\"\r\n        onChange={(e) => {\r\n          setGraphType(e.target.value);\r\n        }}\r\n      >\r\n        <option selected=\"selected\"></option>\r\n        {GraphTypes.map(({ value, label }, index) => (\r\n          <option key={index} value={value}>\r\n            {label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n\r\n      {graphType === \"Line\" && (\r\n        <>\r\n          <select\r\n            name=\"LineType\"\r\n            onChange={(e) => {\r\n              setLineType(e.target.value);\r\n            }}\r\n          >\r\n            <option selected=\"selected\"></option>\r\n            {LineGraphTypes.map(({ value, label }, index) => (\r\n              <option key={index} value={value}>\r\n                {label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {lineType && <LineGraph type={lineType} />}\r\n        </>\r\n      )}\r\n\r\n      {graphType === \"Bar\" && (\r\n        <>\r\n          <select\r\n            name=\"BarType\"\r\n            onChange={(e) => {\r\n              setBarType(e.target.value);\r\n            }}\r\n          >\r\n            <option selected=\"selected\"></option>\r\n            {BarGraphType.map(({ value, label }, index) => (\r\n              <option key={index} value={value}>\r\n                {label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {barType && <BarGraph type={barType} />}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}