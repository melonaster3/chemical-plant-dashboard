{"ast":null,"code":"var _jsxFileName = \"/home/labber/Dev/chemical-plant-dashboard/src/components/Bar.jsx\";\nimport React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { dummyDatasets } from \"../services/dummy\";\nimport { timestampToReadableDate } from \"../services/time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport function BarGraph(props) {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Chart.js Bar Chart\"\n      }\n    },\n    scales: {\n      y: {\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, ticks) {\n            return value + \"kpa\";\n          }\n        }\n      }\n    }\n  };\n  const labels = dummyDatasets.map(data => {\n    return timestampToReadableDate(data.timestamp);\n  });\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Dataset 1\",\n      data: dummyDatasets.map(data => {\n        return data.temperature;\n      }),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }\n    /*   {\r\n      label: \"Dataset 2\",\r\n      data: dummyDatasets.map((data) => {\r\n        return data.pressure;\r\n      }),\r\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n    }, */]\n  };\n\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n}\n_c = BarGraph;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","dummyDatasets","timestampToReadableDate","jsxDEV","_jsxDEV","register","BarGraph","props","options","responsive","plugins","legend","position","title","display","text","scales","y","ticks","callback","value","index","labels","map","data","timestamp","datasets","label","temperature","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/labber/Dev/chemical-plant-dashboard/src/components/Bar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { dummyDatasets } from \"../services/dummy\";\r\nimport { timestampToReadableDate } from \"../services/time\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport function BarGraph(props) {\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Chart.js Bar Chart\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, ticks) {\r\n            return value + \"kpa\";\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const labels = dummyDatasets.map((data) => {\r\n    return timestampToReadableDate(data.timestamp);\r\n  });\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Dataset 1\",\r\n        data: dummyDatasets.map((data) => {\r\n          return data.temperature;\r\n        }),\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n      /*   {\r\n        label: \"Dataset 2\",\r\n        data: dummyDatasets.map((data) => {\r\n          return data.pressure;\r\n        }),\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      }, */\r\n    ],\r\n  };\r\n\r\n  return <Bar options={options} data={data} />;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,uBAAuB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3DX,OAAO,CAACY,QAAQ,CACdX,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,OAAO,SAASO,QAAQA,CAACC,KAAK,EAAE;EAC9B,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,KAAK,EAAE;UACL;UACAC,QAAQ,EAAE,SAAAA,CAAUC,KAAK,EAAEC,KAAK,EAAEH,KAAK,EAAE;YACvC,OAAOE,KAAK,GAAG,KAAK;UACtB;QACF;MACF;IACF;EACF,CAAC;EAED,MAAME,MAAM,GAAGrB,aAAa,CAACsB,GAAG,CAAEC,IAAI,IAAK;IACzC,OAAOtB,uBAAuB,CAACsB,IAAI,CAACC,SAAS,CAAC;EAChD,CAAC,CAAC;EAEF,MAAMD,IAAI,GAAG;IACXF,MAAM;IACNI,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBH,IAAI,EAAEvB,aAAa,CAACsB,GAAG,CAAEC,IAAI,IAAK;QAChC,OAAOA,IAAI,CAACI,WAAW;MACzB,CAAC,CAAC;MACFC,eAAe,EAAE;IACnB;IACA;AACN;AACA;AACA;AACA;AACA;AACA,SANM;EAQJ,CAAC;;EAED,oBAAOzB,OAAA,CAACJ,GAAG;IAACQ,OAAO,EAAEA,OAAQ;IAACgB,IAAI,EAAEA;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;AAACC,EAAA,GAjDe5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}