{"ast":null,"code":"var _jsxFileName = \"/home/labber/Dev/chemical-plant-dashboard/src/components/Bar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { dummyDatasets } from \"../services/dummy\";\nimport { timestampToReadableDate } from \"../services/time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport function BarGraph(props) {\n  _s();\n  const barType = props.barType;\n  const [options, setOptions] = useState({});\n  const [labels, setLabels] = useState([]);\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    setOptions({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        title: {\n          display: true,\n          text: \"Chart.js Bar Chart\"\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: item => `${item.yLabel} 째C`\n        }\n      },\n      scales: {\n        y: {\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, ticks) {\n              return value + \" 째C\";\n            }\n          }\n        }\n      }\n    });\n    setLabels(dummyDatasets.map(data => {\n      return timestampToReadableDate(data.timestamp);\n    }));\n    setChartData({\n      labels,\n      datasets: [{\n        label: \"Dataset 1\",\n        data: dummyDatasets.map(data => {\n          return data.temperature;\n        }),\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n      }\n      /*   {\r\n          label: \"Dataset 2\",\r\n          data: dummyDatasets.map((data) => {\r\n            return data.pressure;\r\n          }),\r\n          backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n        }, */]\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: options && labels.length > 0 && chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n}\n_s(BarGraph, \"XODYSHHvai3qwzys3ApSb9jAig0=\");\n_c = BarGraph;\nvar _c;\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","dummyDatasets","timestampToReadableDate","jsxDEV","_jsxDEV","Fragment","_Fragment","register","BarGraph","props","_s","barType","options","setOptions","labels","setLabels","chartData","setChartData","responsive","plugins","legend","position","title","display","text","tooltips","callbacks","label","item","yLabel","scales","y","ticks","callback","value","index","map","data","timestamp","datasets","temperature","backgroundColor","children","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/labber/Dev/chemical-plant-dashboard/src/components/Bar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { dummyDatasets } from \"../services/dummy\";\r\nimport { timestampToReadableDate } from \"../services/time\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport function BarGraph(props) {\r\n  const barType = props.barType;\r\n\r\n  const [options, setOptions] = useState({});\r\n  const [labels, setLabels] = useState([]);\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setOptions({\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Chart.js Bar Chart\",\r\n        },\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          label: (item) => `${item.yLabel} 째C`,\r\n        },\r\n      },\r\n      scales: {\r\n        y: {\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, ticks) {\r\n              return value + \" 째C\";\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n    setLabels(\r\n      dummyDatasets.map((data) => {\r\n        return timestampToReadableDate(data.timestamp);\r\n      })\r\n    );\r\n    setChartData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Dataset 1\",\r\n          data: dummyDatasets.map((data) => {\r\n            return data.temperature;\r\n          }),\r\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n        },\r\n        /*   {\r\n            label: \"Dataset 2\",\r\n            data: dummyDatasets.map((data) => {\r\n              return data.pressure;\r\n            }),\r\n            backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n          }, */\r\n      ],\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {options && labels.length > 0 && chartData ? (\r\n        <Bar options={options} data={chartData} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,uBAAuB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC3Db,OAAO,CAACc,QAAQ,CACdb,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,OAAO,SAASS,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9B,MAAMC,OAAO,GAAGF,KAAK,CAACE,OAAO;EAE7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACduB,UAAU,CAAC;MACTK,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,QAAQ,EAAE;QACRC,SAAS,EAAE;UACTC,KAAK,EAAGC,IAAI,IAAM,GAAEA,IAAI,CAACC,MAAO;QAClC;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,KAAK,EAAE;YACL;YACAC,QAAQ,EAAE,SAAAA,CAAUC,KAAK,EAAEC,KAAK,EAAEH,KAAK,EAAE;cACvC,OAAOE,KAAK,GAAG,KAAK;YACtB;UACF;QACF;MACF;IACF,CAAC,CAAC;IACFnB,SAAS,CACPd,aAAa,CAACmC,GAAG,CAAEC,IAAI,IAAK;MAC1B,OAAOnC,uBAAuB,CAACmC,IAAI,CAACC,SAAS,CAAC;IAChD,CAAC,CACH,CAAC;IACDrB,YAAY,CAAC;MACXH,MAAM;MACNyB,QAAQ,EAAE,CACR;QACEZ,KAAK,EAAE,WAAW;QAClBU,IAAI,EAAEpC,aAAa,CAACmC,GAAG,CAAEC,IAAI,IAAK;UAChC,OAAOA,IAAI,CAACG,WAAW;QACzB,CAAC,CAAC;QACFC,eAAe,EAAE;MACnB;MACA;AACR;AACA;AACA;AACA;AACA;AACA,aANQ;IAQJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErC,OAAA,CAAAE,SAAA;IAAAoC,QAAA,EACG9B,OAAO,IAAIE,MAAM,CAAC6B,MAAM,GAAG,CAAC,IAAI3B,SAAS,gBACxCZ,OAAA,CAACJ,GAAG;MAACY,OAAO,EAAEA,OAAQ;MAACyB,IAAI,EAAErB;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1C3C,OAAA,CAAAE,SAAA,mBAAI;EACL,gBACD,CAAC;AAEP;AAACI,EAAA,CAtEeF,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}